File "pr5673_bad.ml", line 31, characters 22-23:
31 | let f (x : refer1) = (x : refer2)
                           ^
Error: This expression has type
         refer1 = < poly : 'a 'b 'c. ('b, 'c) #Classdef.cl2 as 'a >
       but an expression was expected of type
         refer2 = < poly : 'd 'b 'c. ('b, 'c) #Classdef.cl2 as 'd >
       Type ('b, 'c, ('b, 'c) Classdef.cl1) Classdef.cl0 = <  >
       is not compatible with type
         ('b0, 'c0, ('b0, 'c0) Classdef.cl1) Classdef.cl0 
       Type < m : 'b -> 'c -> int; .. > is not compatible with type
         ('b, 'c) Classdef.cl1 =
           < m : 'b -> 'c -> int; raise_trouble : int -> 'b > 
       The universal variable 'b would escape its scope
