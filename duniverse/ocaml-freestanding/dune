(data_only_dirs ocaml)

;; dummy OCaml library to be able to refer to installed files

(library
 (public_name ocaml-freestanding)
 (libraries solo5)
 (name freestanding))

;; Use a local file (cflags) to store include paths

; ${cc} += $LOCAL_CFLAGS

(rule
 (targets cflags)
 (deps
  (env_var PWD)
  (source_tree nolibc)
  (source_tree openlibm))
 (action
  (with-stdout-to
   %{targets}
   ; FIXME: do not use realpath
   (bash
     "echo \"(-isystem $(realpath nolibc/include) -I$(realpath openlibm/include) -I$(realpath openlibm/src))\""))))

(rule
 (targets install-cflags)
 (deps
  (env_var PWD))
 (action
  (with-stdout-to
   %{targets}
   ; FIXME: do not use realpath
   ; FIXME: %{lib:<self>} doesn't point to the install path
   (bash
     "echo \"(-ffreestanding -I$(realpath $(dirname %{lib:ocaml-freestanding:dune-package})))\""))))

(install
 (section lib)
 (package ocaml-freestanding)
 (files
  (install-cflags as cflags)))

(env
 (_
  (c_flags
   (:standard
    -ffreestanding
    (:include cflags)))))

;; OPENLIBM

(subdir
 openlibm
 (copy_files ../build-openlibm.sh)
 (rule
  (deps
   build-openlibm.sh
   (source_tree .)
   (source_tree ../nolibc))
  (targets libopenlibm.a)
  (action
   (run ./build-openlibm.sh %{cc})))
 (install
  (section lib)
  (package ocaml-freestanding)
  (files
    libopenlibm.a
    include/openlibm.h
    include/openlibm_complex.h
    include/openlibm_fenv.h
    include/openlibm_fenv_amd64.h
    include/openlibm_fenv_arm.h
    include/openlibm_fenv_i387.h
    include/openlibm_fenv_powerpc.h
    include/openlibm_math.h))
 (subdir
  src
  (install
   (section lib)
   (package ocaml-freestanding)
   (files aarch64_fpmath.h fpmath.h math_private.h amd64_fpmath.h
     i386_fpmath.h math_private_openbsd.h bsd_cdefs.h k_log.h
     powerpc_fpmath.h cdefs-compat.h k_logf.h types-compat.h))))

;; NOLIBC

(subdir
 nolibc
 (copy_files ../build-nolibc.sh)
 (rule
  (targets nolibc-cflags)
  (deps %{lib:solo5:solo5/solo5.h})
  (action
   (with-stdout-to
    %{targets}
    (bash "echo \"(-I$(realpath $(dirname %{lib:solo5:solo5/solo5.h})))\""))))
 (env
  (_
   (c_flags
    :standard
    (:include nolibc-cflags))))
 (rule
  (deps
   build-nolibc.sh
   (source_tree .)
   (source_tree ../openlibm))
  (targets libnolibc.a)
  (action
   (run ./build-nolibc.sh %{cc})))
 (install
  (section lib)
  (package ocaml-freestanding)
  (files libnolibc.a))
 (subdir
  include
  (install
   (section lib)
   (package ocaml-freestanding)
   (files assert.h ctype.h dirent.h endian.h errno.h fcntl.h features.h
     limits.h math.h setjmp.h signal.h stdio.h stdlib.h string.h time.h
     unistd.h))
  (subdir
   sys
   (install
    (section lib)
    (package ocaml-freestanding)
    (files
     (ioctl.h as sys/ioctl.h)
     (stat.h as sys/stat.h)
     (time.h as sys/time.h)
     (times.h as sys/times.h)
     (types.h as sys/types.h)
     (wait.h as sys/wait.h))))))

;; ASMRUN

; FIXME: See ocaml/dune#3387

(subdir
 ocaml-src/runtime/caml
 (copy_files ../../../ocaml/%{ocaml_version}/runtime/caml/**))

(subdir
 ocaml-src/runtime
 (copy_files ../../ocaml/%{ocaml_version}/runtime/**))

(subdir
 ocaml-src/tools
 (copy_files ../../ocaml/%{ocaml_version}/tools/**))

(subdir
 ocaml-src/build-aux
 (copy_files ../../ocaml/%{ocaml_version}/build-aux/**))

(subdir
 ocaml-src
 (copy_files ../ocaml/%{ocaml_version}/**))

(subdir
 ocaml-src
 (copy_files ../configure-ocaml.sh)
 (rule
  (deps
   configure-ocaml.sh
   ; FIXME: source_tree deps doesn't work with copy_files
   (glob_files configure*)
   (glob_files {Makefile,Makefile.*.in})
   (glob_files runtime/**.[!a])
   (glob_files runtime/caml/**)
   (glob_files tools/**)
   (glob_files build-aux/**)
   (source_tree ../nolibc)
   (source_tree ../openlibm))
  ; s.h and m.h are listed here as dune doesn't like targets in subdir ocaml/dune#3374
  (targets Makefile.config Makefile.common s.h m.h version.h domain.h
    domain_state.h domain_state.tbl)
  (action
   (run ./configure-ocaml.sh %{cc})))
 (subdir
  runtime
  (rule
   (deps
    ; FIXME: source_tree deps doesn't work with copy_files
    Makefile
    .depend
    (glob_files caml/**)
    ; normal deps
    ../VERSION
    ../Makefile.config
    ../Makefile.common
    ../s.h
    ../m.h
    ../version.h)
   (targets libasmrun.a)
   (action
    (progn
     (run cp ../s.h ../m.h ../version.h caml)
     (run %{make} libasmrun.a))))
  (install
   (section lib)
   (package ocaml-freestanding)
   (files libasmrun.a))
  (subdir
   caml
   ; installing the caml/ dir is not possible, see ocaml/dune#3365
   (install
    (section lib)
    (package ocaml-freestanding)
    (files
     (alloc.h as caml/alloc.h)
     (callback.h as caml/callback.h)
     (config.h as caml/config.h)
     (custom.h as caml/custom.h)
     (fail.h as caml/fail.h)
     (hash.h as caml/hash.h)
     (intext.h as caml/intext.h)
     (memory.h as caml/memory.h)
     (misc.h as caml/misc.h)
     (mlvalues.h as caml/mlvalues.h)
     (printexc.h as caml/printexc.h)
     (signals.h as caml/signals.h)
     (compatibility.h as caml/compatibility.h)
     (../../m.h as caml/m.h)
     (../../s.h as caml/s.h)
     (../../domain.h as caml/domain.h)
     (../../domain_state.h as caml/domain_state.h)
     (../../domain_state.tbl as caml/domain_state.tbl))))))
